"""empty message

Revision ID: 4e75fd38571d
Revises: c799dc8d872f
Create Date: 2025-05-02 00:56:05.044639

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '4e75fd38571d'
down_revision = 'c799dc8d872f'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('marches',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('designation', sa.String(length=255), nullable=False),
    sa.Column('pv_cspmp_lancement', sa.LargeBinary(), nullable=True),
    sa.Column('pv_cspmp_lancement_filename', sa.String(length=255), nullable=True),
    sa.Column('date_reunion_demarrage', sa.Date(), nullable=True),
    sa.Column('criteres_qualification', sa.Enum('PAR_PRODUIT', 'PAR_OFFRE', name='criteresqualificationenum'), nullable=False),
    sa.Column('type', sa.String(length=50), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('consultation_fournisseurs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('liste_fournisseurs_consulter', sa.LargeBinary(), nullable=True),
    sa.Column('liste_fournisseurs_consulter_filename', sa.String(length=255), nullable=True),
    sa.Column('voie_soumission', sa.String(length=255), nullable=False),
    sa.Column('date_lancement', sa.Date(), nullable=True),
    sa.Column('date_limite_depot', sa.Date(), nullable=True),
    sa.Column('demande_cotation', sa.LargeBinary(), nullable=True),
    sa.Column('demande_cotation_filename', sa.String(length=255), nullable=True),
    sa.Column('evaluation', sa.Boolean(), nullable=True),
    sa.Column('pv_evaluation', sa.LargeBinary(), nullable=True),
    sa.Column('pv_evaluation_filename', sa.String(length=255), nullable=True),
    sa.Column('date_evaluation', sa.Date(), nullable=True),
    sa.Column('pv_designation_comission_ad_hoc', sa.LargeBinary(), nullable=True),
    sa.Column('pv_designation_comission_ad_hoc_filename', sa.String(length=255), nullable=True),
    sa.Column('ppm_ou_justificatif_achat', sa.LargeBinary(), nullable=True),
    sa.Column('ppm_ou_justificatif_achat_filename', sa.String(length=255), nullable=True),
    sa.Column('cloture', sa.Boolean(), nullable=True),
    sa.Column('decision_cspmp', sa.Enum('INFRUCTUEUX', 'NOUVELLE_PROCEDURE', 'GENERER_CONTRATS', name='decisioncspmpenum'), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['marches.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('contrats',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('fournisseur_id', sa.Integer(), nullable=False),
    sa.Column('marche_id', sa.Integer(), nullable=False),
    sa.Column('date_signature', sa.Date(), nullable=False),
    sa.Column('date_approbation', sa.Date(), nullable=True),
    sa.Column('date_notification', sa.Date(), nullable=True),
    sa.Column('mode_paiement', sa.Enum('Lettre de Cr√©dit', 'Virement Bancaire', name='mode_paiement_enum'), nullable=False),
    sa.Column('contrat_pdf', sa.LargeBinary(), nullable=True),
    sa.Column('contrat_pdf_filename', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['fournisseur_id'], ['fournisseurs.id'], ),
    sa.ForeignKeyConstraint(['marche_id'], ['marches.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('entente_directe',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('pv_negociation', sa.LargeBinary(), nullable=True),
    sa.Column('pv_negociation_filename', sa.String(length=255), nullable=True),
    sa.Column('offre_technique', sa.LargeBinary(), nullable=True),
    sa.Column('offre_technique_filename', sa.String(length=255), nullable=True),
    sa.Column('offre_financiere', sa.LargeBinary(), nullable=True),
    sa.Column('offre_financiere_filename', sa.String(length=255), nullable=True),
    sa.Column('justificatif_recours', sa.LargeBinary(), nullable=True),
    sa.Column('justificatif_recours_filename', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['marches.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('marche_produit',
    sa.Column('marche_id', sa.Integer(), nullable=False),
    sa.Column('produit_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['marche_id'], ['marches.id'], ),
    sa.ForeignKeyConstraint(['produit_id'], ['produits.id'], ),
    sa.PrimaryKeyConstraint('marche_id', 'produit_id')
    )
    op.create_table('lettres_de_credit',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('contrat_id', sa.Integer(), nullable=False),
    sa.Column('duree_paiement', sa.String(length=255), nullable=False),
    sa.Column('conditions_livraison', sa.String(length=500), nullable=False),
    sa.Column('lettre_ouverture', sa.LargeBinary(), nullable=True),
    sa.Column('lettre_ouverture_filename', sa.String(length=255), nullable=True),
    sa.Column('lc_pdf', sa.LargeBinary(), nullable=True),
    sa.Column('lc_pdf_filename', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['contrat_id'], ['contrats.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('livraisons',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('contrat_id', sa.Integer(), nullable=False),
    sa.Column('produit_id', sa.Integer(), nullable=False),
    sa.Column('quantite_livree', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['contrat_id'], ['contrats.id'], ),
    sa.ForeignKeyConstraint(['produit_id'], ['produits.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('produits_contrats',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('contrat_id', sa.Integer(), nullable=False),
    sa.Column('produit_id', sa.Integer(), nullable=False),
    sa.Column('quantite', sa.Float(), nullable=False),
    sa.Column('marge', sa.Float(), nullable=True),
    sa.Column('prix_unitaire', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['contrat_id'], ['contrats.id'], ),
    sa.ForeignKeyConstraint(['produit_id'], ['produits.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('pv_receptions',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('contrat_id', sa.Integer(), nullable=False),
    sa.Column('pv_reception', sa.LargeBinary(), nullable=False),
    sa.Column('pv_reception_filename', sa.String(length=255), nullable=False),
    sa.ForeignKeyConstraint(['contrat_id'], ['contrats.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('soumissions',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('fournisseur_id', sa.Integer(), nullable=False),
    sa.Column('consultation_fournisseurs_id', sa.Integer(), nullable=False),
    sa.Column('soumission_document', sa.LargeBinary(), nullable=False),
    sa.Column('soumission_document_filename', sa.String(length=255), nullable=False),
    sa.Column('montant_total', sa.Float(), nullable=True),
    sa.Column('ordre_classement', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['consultation_fournisseurs_id'], ['consultation_fournisseurs.id'], ),
    sa.ForeignKeyConstraint(['fournisseur_id'], ['fournisseurs.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('offres_financieres',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('soumission_id', sa.Integer(), nullable=False),
    sa.Column('produit_id', sa.Integer(), nullable=False),
    sa.Column('prix_unitaire', sa.Float(), nullable=False),
    sa.Column('ordre_classement', sa.Integer(), nullable=True),
    sa.Column('exclure', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['produit_id'], ['produits.id'], ),
    sa.ForeignKeyConstraint(['soumission_id'], ['soumissions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('offres_techniques',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('soumission_id', sa.Integer(), nullable=False),
    sa.Column('produit_id', sa.Integer(), nullable=False),
    sa.Column('specifications', sa.String(length=500), nullable=False),
    sa.ForeignKeyConstraint(['produit_id'], ['produits.id'], ),
    sa.ForeignKeyConstraint(['soumission_id'], ['soumissions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('offres_techniques')
    op.drop_table('offres_financieres')
    op.drop_table('soumissions')
    op.drop_table('pv_receptions')
    op.drop_table('produits_contrats')
    op.drop_table('livraisons')
    op.drop_table('lettres_de_credit')
    op.drop_table('marche_produit')
    op.drop_table('entente_directe')
    op.drop_table('contrats')
    op.drop_table('consultation_fournisseurs')
    op.drop_table('marches')
    # ### end Alembic commands ###
